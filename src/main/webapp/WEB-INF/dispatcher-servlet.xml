<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
    xmlns:configurator="http://cocoon.apache.org/schema/configurator" xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans 
                            http://www.springframework.org/schema/beans/spring-beans.xsd
                            http://www.springframework.org/schema/context 
                            http://www.springframework.org/schema/context/spring-context.xsd
                            http://cocoon.apache.org/schema/configurator
                            http://cocoon.apache.org/schema/configurator/cocoon-configurator-1.0.1.xsd
                            http://www.springframework.org/schema/aop
                            http://www.springframework.org/schema/aop/spring-aop-2.5.xsd  
                            http://www.springframework.org/schema/tx
                            http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

    <context:component-scan base-package="com.mrhaki.spring.mavenapp" />
    <context:component-scan base-package="eu.linkedtv.keywords.v1.controllers" />
    <context:component-scan base-package="eu.linkedtv.keywords.v1.rest" />
    <context:component-scan base-package="eu.linkedtv.keywords.v2.rest" />

    <configurator:settings runningMode="prod" />
    <context:annotation-config />
    <tx:annotation-driven transaction-manager="transactionManager" />

    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor" />

    <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource" p:driverClassName="${jdbc.driverClassName}"
        p:url="${jdbc.url}" p:username="${jdbc.username}" p:password="${jdbc.password}" />

    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"
        p:entityManagerFactory-ref="entityManagerFactory" />

    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
        p:dataSource-ref="dataSource" p:jpaVendorAdapter-ref="jpaAdapter">
        <property name="loadTimeWeaver">
            <bean class="org.springframework.instrument.classloading.InstrumentationLoadTimeWeaver" />
        </property>
        <property name="persistenceUnitName" value="keywordsPU"></property>
    </bean>

    <bean id="jpaAdapter" class="org.springframework.orm.jpa.vendor.EclipseLinkJpaVendorAdapter"
        p:databasePlatform="${jpa.databasePlatform}" p:showSql="${jpa.showSql}" />

    <!-- Languages START -->
    <bean name="germanKeywordsIndexer" class="eu.linkedtv.keywords.v1.indexers.GermanTTKeywordsIndexer" scope="prototype">
        <constructor-arg value="${gate.anniePlugin.path}" />
        <constructor-arg value="${gate.taggerFrameworkPlugin.path}" />
        <constructor-arg value="${gate.corpus.german.name}" />
        <constructor-arg value="${gate.treeTagger.german.path}" />
        <constructor-arg value="${gate.japeGrammer.german.resource}" />        
        <property name="stopWordsList" value="${kw.stopwords.german}" />
    </bean>

    <bean name="dutchKeywordsIndexer" class="eu.linkedtv.keywords.v1.indexers.DutchTTKeywordsIndexer" scope="prototype">
        <constructor-arg value="${gate.anniePlugin.path}" />
        <constructor-arg value="${gate.taggerFrameworkPlugin.path}" />
        <constructor-arg value="${gate.corpus.dutch.name}" />
        <constructor-arg value="${gate.treeTagger.dutch.path}" />
        <constructor-arg value="${gate.japeGrammer.dutch.resource}" />
        <property name="stopWordsList" value="${kw.stopwords.dutch}" />
    </bean>

    <bean name="germanKeywordsDao" class="eu.linkedtv.keywords.v1.dao.KeywordsDao">
        <constructor-arg>
            <value type="java.lang.Class">eu.linkedtv.keywords.v1.models.GermanKeyword</value>
        </constructor-arg>
    </bean>

    <bean name="dutchKeywordsDao" class="eu.linkedtv.keywords.v1.dao.KeywordsDao">
        <constructor-arg>
            <value type="java.lang.Class">eu.linkedtv.keywords.v1.models.DutchKeyword</value>
        </constructor-arg>
    </bean>

    <bean name="germanKeywordsOccurrencesDao" class="eu.linkedtv.keywords.v1.dao.KeywordsOccurrencesDao">
        <constructor-arg>
            <value type="java.lang.Class">eu.linkedtv.keywords.v1.models.GermanKeywordsOccurrence
            </value>
        </constructor-arg>
    </bean>

    <bean name="dutchKeywordsOccurrencesDao" class="eu.linkedtv.keywords.v1.dao.KeywordsOccurrencesDao">
        <constructor-arg>
            <value type="java.lang.Class">eu.linkedtv.keywords.v1.models.DutchKeywordsOccurrence</value>
        </constructor-arg>
    </bean>

    <bean name="germanFilesDao" class="eu.linkedtv.keywords.v1.dao.FilesDao">
        <constructor-arg>
            <value type="java.lang.Class">eu.linkedtv.keywords.v1.models.GermanTextFile</value>
        </constructor-arg>
    </bean>

    <bean name="dutchFilesDao" class="eu.linkedtv.keywords.v1.dao.FilesDao">
        <constructor-arg>
            <value type="java.lang.Class">eu.linkedtv.keywords.v1.models.DutchTextFile</value>
        </constructor-arg>
    </bean>
    <!-- Languages END -->
    
    <!-- V2 START -->
    <bean name="keywordsDao" class="eu.linkedtv.keywords.v2.dao.KeywordsDao" />
    <bean name="keywordsOccurrencesDao" class="eu.linkedtv.keywords.v2.dao.KeywordsOccurrencesDao" />
    <bean name="filesDao" class="eu.linkedtv.keywords.v2.dao.FilesDao" />
    <bean name="usersDao" class="eu.linkedtv.keywords.v2.dao.UsersDao" />
    
    <bean name="germanV2KeywordsIndexer" class="eu.linkedtv.keywords.v2.indexers.TTKeywordsIndexer" scope="prototype">
        <constructor-arg value="${gate.anniePlugin.path}" />
        <constructor-arg value="${gate.taggerFrameworkPlugin.path}" />
        <constructor-arg value="${gate.corpus.german.name}" />
        <constructor-arg value="${gate.treeTagger.german.path}" />
        <constructor-arg value="${gate.japeGrammer.german.resource}" />        
        <property name="stopWordsList" value="${kw.stopwords.german}" />
    </bean>

    <bean name="dutchV2KeywordsIndexer" class="eu.linkedtv.keywords.v2.indexers.TTKeywordsIndexer" scope="prototype">
        <constructor-arg value="${gate.anniePlugin.path}" />
        <constructor-arg value="${gate.taggerFrameworkPlugin.path}" />
        <constructor-arg value="${gate.corpus.dutch.name}" />
        <constructor-arg value="${gate.treeTagger.dutch.path}" />
        <constructor-arg value="${gate.japeGrammer.dutch.resource}" />
        <property name="stopWordsList" value="${kw.stopwords.dutch}" />
    </bean>    
    
    <bean name="englishV2KeywordsIndexer" class="eu.linkedtv.keywords.v2.indexers.TTKeywordsIndexer" scope="prototype">
        <constructor-arg value="${gate.anniePlugin.path}" />
        <constructor-arg value="${gate.taggerFrameworkPlugin.path}" />
        <constructor-arg value="${gate.corpus.english.name}" />
        <constructor-arg value="${gate.treeTagger.english.path}" />
        <constructor-arg value="${gate.japeGrammer.english.resource}" />
        <property name="stopWordsList" value="${kw.stopwords.english}" />
    </bean>        
    <!-- V2 END -->

    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver" />

    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"></property>
        <property name="prefix" value="/WEB-INF/jsp/"></property>
        <property name="suffix" value=".jsp"></property>
    </bean>
</beans>